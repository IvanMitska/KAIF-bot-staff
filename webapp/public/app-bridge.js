// –ü–µ—Ä–µ—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–¥–∞ —Å –Ω–æ–≤—ã–º–∏ webpack –º–æ–¥—É–ª—è–º–∏
// –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –≤—ã–∑–æ–≤—ã –Ω–∞ –Ω–æ–≤—É—é –º–æ–¥—É–ª—å–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É

console.log('üåâ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–Ω–æ–≥–æ –º–æ—Å—Ç–∞ app-bridge.js');

// –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É webpack –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –¥–µ–ª–µ–≥–∏—Ä—É–µ–º –µ–º—É —Ñ—É–Ω–∫—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    console.log('üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ webpack –º–æ–¥—É–ª–µ–π...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ webpack –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    let checkAttempts = 0;
    const maxAttempts = 20; // 2 —Å–µ–∫—É–Ω–¥—ã

    const checkWebpack = setInterval(() => {
        checkAttempts++;

        if (window.KaifApp || window.showCreateTaskModal) {
            clearInterval(checkWebpack);
            console.log('‚úÖ Webpack –º–æ–¥—É–ª–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ', checkAttempts, '–ø–æ–ø—ã—Ç–æ–∫');
            setupBridge();
        } else if (checkAttempts >= maxAttempts) {
            clearInterval(checkWebpack);
            console.warn('‚ö†Ô∏è Webpack –º–æ–¥—É–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–¥');
        }
    }, 100);
});

function setupBridge() {
    console.log('üîó –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ—Å—Ç–∞ –º–µ–∂–¥—É —Å—Ç–∞—Ä—ã–º –∏ –Ω–æ–≤—ã–º –∫–æ–¥–æ–º');

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å—Ç–∞—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    const oldFunctions = {
        showCreateTaskModal: window.showCreateTaskModal,
        closeTaskModal: window.closeTaskModal,
        showPage: window.showPage,
        submitTask: window.submitTask,
        toggleFab: window.toggleFab
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
    if (window.showCreateTaskModal && typeof window.showCreateTaskModal === 'function') {
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π showCreateTaskModal –∏–∑ webpack');
    }

    if (window.closeTaskModal && typeof window.closeTaskModal === 'function') {
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π closeTaskModal –∏–∑ webpack');
    }

    if (window.showPage && typeof window.showPage === 'function') {
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π showPage –∏–∑ webpack');
    }

    if (window.submitTask && typeof window.submitTask === 'function') {
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π submitTask –∏–∑ webpack');
    }

    if (window.toggleFab && typeof window.toggleFab === 'function') {
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π toggleFab –∏–∑ webpack');
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const modal = document.getElementById('taskModal');
    if (modal) {
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–π–¥–µ–Ω–æ –≤ DOM');

        // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–∫—Ä—ã—Ç–æ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        modal.classList.add('hidden');
        modal.style.display = 'none';
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
window.debugBridge = function() {
    console.log('=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ú–û–°–¢–ê ===');
    console.log('KaifApp:', !!window.KaifApp);
    console.log('showCreateTaskModal:', typeof window.showCreateTaskModal);
    console.log('closeTaskModal:', typeof window.closeTaskModal);
    console.log('showPage:', typeof window.showPage);
    console.log('submitTask:', typeof window.submitTask);
    console.log('toggleFab:', typeof window.toggleFab);

    const modal = document.getElementById('taskModal');
    console.log('Modal element:', !!modal);
    if (modal) {
        console.log('Modal classes:', modal.className);
        console.log('Modal display:', window.getComputedStyle(modal).display);
    }

    console.log('=== –ö–û–ù–ï–¶ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ===');
};

console.log('‚úÖ –ú–æ—Å—Ç app-bridge.js –∑–∞–≥—Ä—É–∂–µ–Ω');