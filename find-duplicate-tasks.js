#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∑–∞–¥–∞—á –≤ Notion
 */

require('dotenv').config();
const { Client } = require('@notionhq/client');

const notion = new Client({
  auth: process.env.NOTION_API_KEY
});

const TASKS_DB_ID = '24429e84-656d-8145-b032-dad938461018'; // Tasks DB ID

async function findAndRemoveDuplicates() {
  console.log('üîç –ü–æ–∏—Å–∫ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∑–∞–¥–∞—á –≤ Notion...\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏
    let allTasks = [];
    let hasMore = true;
    let startCursor = undefined;
    
    while (hasMore) {
      const response = await notion.databases.query({
        database_id: TASKS_DB_ID,
        start_cursor: startCursor,
        page_size: 100
      });
      
      allTasks = allTasks.concat(response.results);
      hasMore = response.has_more;
      startCursor = response.next_cursor;
    }
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ –∑–∞–¥–∞—á: ${allTasks.length}`);
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é
    const taskGroups = {};
    
    for (const task of allTasks) {
      const title = task.properties['–ù–∞–∑–≤–∞–Ω–∏–µ']?.rich_text?.[0]?.text?.content || '';
      const assignee = task.properties['–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å']?.rich_text?.[0]?.text?.content || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω';
      const status = task.properties['–°—Ç–∞—Ç—É—Å']?.select?.name || '–ù–æ–≤–∞—è';
      const createdDate = task.properties['–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è']?.date?.start || task.created_time;
      
      // –ö–ª—é—á –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ - –Ω–∞–∑–≤–∞–Ω–∏–µ + –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å
      const key = `${title.trim()}|${assignee}`;
      
      if (!taskGroups[key]) {
        taskGroups[key] = [];
      }
      
      taskGroups[key].push({
        id: task.id,
        title,
        assignee,
        status,
        createdDate: new Date(createdDate),
        createdTime: new Date(task.created_time)
      });
    }
    
    // –ù–∞—Ö–æ–¥–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    const duplicates = [];
    let duplicateCount = 0;
    
    for (const [key, tasks] of Object.entries(taskGroups)) {
      if (tasks.length > 1) {
        // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (—Å—Ç–∞—Ä—ã–µ –ø–µ—Ä–≤—ã–µ)
        tasks.sort((a, b) => a.createdTime - b.createdTime);
        
        console.log(`\nüìå –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã: "${tasks[0].title}" (${tasks[0].assignee})`);
        console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ø–∏–π: ${tasks.length}`);
        
        // –û—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º—É—é —Å—Ç–∞—Ä—É—é –∑–∞–¥–∞—á—É, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–º–µ—á–∞–µ–º –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        const toKeep = tasks[0];
        const toDelete = tasks.slice(1);
        
        console.log(`   ‚úÖ –û—Å—Ç–∞–≤–ª—è–µ–º: ID ${toKeep.id.slice(0, 8)}... (—Å–æ–∑–¥–∞–Ω–∞ ${toKeep.createdTime.toISOString().split('T')[0]})`);
        
        for (const task of toDelete) {
          console.log(`   ‚ùå –£–¥–∞–ª—è–µ–º: ID ${task.id.slice(0, 8)}... (—Å–æ–∑–¥–∞–Ω–∞ ${task.createdTime.toISOString().split('T')[0]})`);
          duplicates.push(task);
          duplicateCount++;
        }
      }
    }
    
    if (duplicateCount === 0) {
      console.log('\n‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
      return;
    }
    
    console.log(`\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ ${duplicateCount} –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∑–∞–¥–∞—á`);
    console.log('–ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...\n');
    
    // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    let deleted = 0;
    let failed = 0;
    
    for (const task of duplicates) {
      try {
        await notion.pages.update({
          page_id: task.id,
          archived: true
        });
        deleted++;
        process.stdout.write(`\r–£–¥–∞–ª–µ–Ω–æ: ${deleted}/${duplicateCount}`);
      } catch (error) {
        failed++;
        console.error(`\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏ ${task.id}: ${error.message}`);
      }
    }
    
    console.log(`\n\n‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!`);
    console.log(`   –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: ${deleted}`);
    if (failed > 0) {
      console.log(`   –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å: ${failed}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const checkResponse = await notion.databases.query({
      database_id: TASKS_DB_ID,
      page_size: 1
    });
    
    console.log(`\n–û—Å—Ç–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –≤ –±–∞–∑–µ: ~${checkResponse.results.length > 0 ? allTasks.length - deleted : 0}`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
findAndRemoveDuplicates();