const { Pool } = require('pg');
require('dotenv').config();

const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: {
        rejectUnauthorized: false
    }
});

async function createTestTask() {
    console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞–¥–∞—á–∏...\n');

    try {
        // –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω –∏–∑ —Ä–µ–∞–ª—å–Ω—ã—Ö ID –∏–∑ –±–∞–∑—ã
        // –ò–ª–∏ —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const testUsers = [
            { id: '385436658', name: '–ë–æ—Ä–∏—Å' },
            { id: '1151085087', name: '–ö—Å–µ–Ω–∏—è' },
            { id: '1734337242', name: '–ò–≤–∞–Ω' }
        ];

        for (const user of testUsers) {
            const taskId = `test-task-${Date.now()}-${user.id}`;

            await pool.query(`
                INSERT INTO tasks (
                    id, task_id, title, description, status, priority,
                    created_date, deadline, creator_name, creator_id,
                    assignee_id, assignee_name
                )
                VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)
            `, [
                taskId,
                taskId,
                '–¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞',
                '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ. –ü–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –µ—ë –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.',
                '–ù–æ–≤–∞—è',
                '–°—Ä–µ–¥–Ω–∏–π',
                new Date(),
                new Date(Date.now() + 7 * 24 * 60 * 60 * 1000), // —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é
                '–°–∏—Å—Ç–µ–º–∞',
                '0',
                user.id,
                user.name
            ]);

            console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ –¥–ª—è ${user.name} (ID: ${user.id})`);
        }

        console.log('\nüìä –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–¥–∞—á: ' + testUsers.length);
        console.log('\nüí° –¢–µ–ø–µ—Ä—å –≤–æ–π–¥–∏—Ç–µ –∫–∞–∫ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∞ –∑–∞–¥–∞—á—É');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
        console.error(error);
    } finally {
        await pool.end();
    }
}

createTestTask();
