#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫—ç—à–∞ —Å Notion
 */

require('dotenv').config();

async function resyncCache() {
    console.log('üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫—ç—à–∞...\n');
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä–≤–∏—Å –∫—ç—à–∞
        const { getInstance } = require('./src/services/cacheService');
        const cache = await getInstance();
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–¥–∞—á–∏
        await cache.runQuery('DELETE FROM tasks');
        console.log('‚úÖ –°—Ç–∞—Ä—ã–µ –∑–∞–¥–∞—á–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫—ç—à–∞');
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        const optimizedService = require('./src/services/optimizedNotionService');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
        await optimizedService.forceSync();
        
        // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        await new Promise(resolve => setTimeout(resolve, 5000));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const stats = await cache.getCacheStats();
        console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:');
        console.log(`- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.users}`);
        console.log(`- –ó–∞–¥–∞—á: ${stats.tasks}`);
        console.log(`- –û—Ç—á–µ—Ç–æ–≤: ${stats.reports}`);
        console.log(`- –ó–∞–ø–∏—Å–µ–π —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏: ${stats.attendance}`);
        console.log(`- –†–∞–∑–º–µ—Ä –ë–î: ${stats.sizeMB} MB`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏ —Å assignee_id
        const tasksWithAssignee = await cache.getOne(
            'SELECT COUNT(*) as count FROM tasks WHERE assignee_id IS NOT NULL'
        );
        console.log(`\n‚úÖ –ó–∞–¥–∞—á —Å assignee_id: ${tasksWithAssignee.count}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        const userTasks = await cache.getAll(`
            SELECT 
                assignee_name, 
                assignee_id, 
                COUNT(*) as task_count
            FROM tasks 
            WHERE assignee_id IS NOT NULL
            GROUP BY assignee_id, assignee_name
            ORDER BY task_count DESC
        `);
        
        if (userTasks.length > 0) {
            console.log('\nüìã –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:');
            userTasks.forEach(user => {
                console.log(`- ${user.assignee_name}: ${user.task_count} –∑–∞–¥–∞—á`);
            });
        }
        
        console.log('\n‚úÖ –ü–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        process.exit(0);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error.message);
        console.error(error.stack);
        process.exit(1);
    }
}

resyncCache();