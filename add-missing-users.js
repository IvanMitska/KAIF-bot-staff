const sqlite3 = require('sqlite3').verbose();
const path = require('path');

const dbPath = path.join(__dirname, 'bot.db');
const db = new sqlite3.Database(dbPath);

console.log('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
console.log('==============================================\n');

// –ù–æ–≤—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
// –ü–æ–ª–∏–Ω–∞ –∑–∞–º–µ–Ω—è–µ—Ç –ï–ª–µ–Ω—É –≤ —Å–∞–ª–æ–Ω–µ –∫—Ä–∞—Å–æ—Ç—ã
// –Æ—Ä–∏–π –∑–∞–º–µ–Ω—è–µ—Ç –Ø–∫–æ–≤–∞ –≤ –±–∞–Ω–µ
const newUsers = [
    {
        telegram_id: '726915228', // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –æ—Ç –ï–ª–µ–Ω—ã –¥–ª—è –ü–æ–ª–∏–Ω—ã
        name: '–ü–æ–ª–∏–Ω–∞',
        full_name: '–ü–æ–ª–∏–Ω–∞ –ë–æ—Ä–∑–æ–≤–∞',
        position: '–£–ø—Ä–∞–≤–ª—è—é—â–∞—è —Å–∞–ª–æ–Ω–æ–º –∫—Ä–∞—Å–æ—Ç—ã',
        is_manager: 0,
        is_active: 1
    },
    {
        telegram_id: '893020643', // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –æ—Ç –Ø–∫–æ–≤–∞ –¥–ª—è –Æ—Ä–∏—è
        name: '–Æ—Ä–∏–π',
        full_name: '–Æ—Ä–∏–π –ë—É–≥–∞—Ç—Ç–∏',
        position: '–ë–∞–Ω—â–∏–∫',
        is_manager: 0,
        is_active: 1
    }
];

db.serialize(() => {
    console.log('üìã –¢–µ–∫—É—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±–∞–∑–µ:');
    db.all("SELECT telegram_id, name, position FROM users ORDER BY name", (err, rows) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err);
            return;
        }

        console.table(rows);

        console.log('\n‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤...\n');

        const stmt = db.prepare(`
            INSERT OR REPLACE INTO users (telegram_id, name, position)
            VALUES (?, ?, ?)
        `);

        newUsers.forEach(user => {
            stmt.run(
                user.telegram_id,
                user.name,
                user.position,
                function(err) {
                    if (err) {
                        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ${user.name}:`, err);
                    } else {
                        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.name} (${user.position})`);
                    }
                }
            );
        });

        stmt.finalize(() => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            setTimeout(() => {
                console.log('\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
                db.all("SELECT telegram_id, name, position FROM users ORDER BY name", (err, rows) => {
                    if (err) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err);
                        db.close();
                        return;
                    }

                    console.table(rows);

                    // –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∞–µ–º –∑–∞–¥–∞—á–∏ –µ—Å–ª–∏ –æ–Ω–∏ –æ—Å—Ç–∞–ª–∏—Å—å –æ—Ç —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    console.log('\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–µ–Ω–∞ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–¥–∞—á–∞—Ö...');

                    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–¥–∞—á–∏ –≥–¥–µ assignee_id —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                    db.run(`
                        UPDATE tasks
                        SET assignee_name = '–ü–æ–ª–∏–Ω–∞'
                        WHERE assignee_id = '726915228'
                    `, function(err) {
                        if (err) {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á –ü–æ–ª–∏–Ω—ã:', err);
                        } else if (this.changes > 0) {
                            console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–¥–∞—á –¥–ª—è –ü–æ–ª–∏–Ω—ã: ${this.changes}`);
                        }
                    });

                    db.run(`
                        UPDATE tasks
                        SET assignee_name = '–Æ—Ä–∏–π'
                        WHERE assignee_id = '893020643'
                    `, function(err) {
                        if (err) {
                            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á –Æ—Ä–∏—è:', err);
                        } else if (this.changes > 0) {
                            console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–¥–∞—á –¥–ª—è –Æ—Ä–∏—è: ${this.changes}`);
                        }

                        console.log('\n‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω!');
                        console.log('\nüìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:');
                        console.log('  - –ü–æ–ª–∏–Ω–∞ (Polina Borzova) - –£–ø—Ä–∞–≤–ª—è—é—â–∞—è —Å–∞–ª–æ–Ω–æ–º –∫—Ä–∞—Å–æ—Ç—ã');
                        console.log('  - –Æ—Ä–∏–π (Iurii Bugatti) - –ë–∞–Ω—â–∏–∫');
                        db.close();
                    });
                });
            }, 100);
        });
    });
});