// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
require('dotenv').config();
const { Pool } = require('pg');

async function activateAllUsers() {
    const pool = new Pool({
        connectionString: process.env.DATABASE_URL,
        ssl: false // –î–ª—è Railway proxy –Ω–µ –Ω—É–∂–µ–Ω SSL
    });
    
    try {
        console.log('üîÑ Activating all users in database...\n');
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const updateQuery = `UPDATE users SET is_active = true WHERE is_active = false OR is_active IS NULL`;
        const result = await pool.query(updateQuery);
        console.log(`‚úÖ Activated ${result.rowCount} users\n`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        const checkQuery = `SELECT telegram_id, name, position, is_active FROM users ORDER BY name`;
        const users = await pool.query(checkQuery);
        
        console.log('üìã Current users status:');
        users.rows.forEach((user, i) => {
            console.log(`${i + 1}. ${user.name} (${user.telegram_id})`);
            console.log(`   Position: ${user.position}`);
            console.log(`   Active: ${user.is_active ? '‚úÖ' : '‚ùå'}`);
        });
        
        console.log('\n‚úÖ All users are now active!');
        
    } catch (error) {
        console.error('‚ùå Error:', error.message);
    } finally {
        await pool.end();
    }
}

activateAllUsers();