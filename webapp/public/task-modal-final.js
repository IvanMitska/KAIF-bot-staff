// –§–∏–Ω–∞–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–¥–∞—á - –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–º
console.log('üöÄ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è task-modal-final.js');

// –ó–∞—â–∏—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è showTaskDetails
(function() {
    'use strict';

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    const originalShowTaskDetails = window.showTaskDetails;
    const originalCreateTaskDetailModal = window.createTaskDetailModal;
    const originalCloseTaskDetailModal = window.closeTaskDetailModal;

    console.log('üîç –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:', {
        showTaskDetails: typeof originalShowTaskDetails,
        createTaskDetailModal: typeof originalCreateTaskDetailModal,
        closeTaskDetailModal: typeof originalCloseTaskDetailModal
    });

    // –ö–µ—à –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    let taskDetailModalCache = null;
    let currentTaskDetails = null;

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function createTaskDetailModal() {
        if (taskDetailModalCache) {
            return taskDetailModalCache;
        }

        const modalHTML = `
            <div id="taskDetailModal" class="modal-overlay hidden" style="
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background: rgba(0, 0, 0, 0.8);
                backdrop-filter: blur(8px);
                z-index: 10000;
                display: none;
                justify-content: center;
                align-items: center;
                padding: 20px;
                box-sizing: border-box;
            ">
                <div class="modal-container task-detail-container" style="
                    width: 90%;
                    max-width: 600px;
                    max-height: 90vh;
                    overflow-y: auto;
                    background: var(--bg-card, #1a1a2e);
                    border-radius: 20px;
                    padding: 0;
                    position: relative;
                    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
                ">
                    <div class="modal-header" style="
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        padding: 24px 24px 0 24px;
                        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
                        margin-bottom: 0;
                    ">
                        <div class="modal-title-section">
                            <div style="display: flex; align-items: center; gap: 12px;">
                                <div class="modal-icon" style="
                                    width: 40px;
                                    height: 40px;
                                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                    border-radius: 12px;
                                    display: flex;
                                    align-items: center;
                                    justify-content: center;
                                    color: white;
                                ">üìã</div>
                                <h2 class="modal-title" style="
                                    margin: 0;
                                    color: var(--text-primary, #ffffff);
                                    font-size: 20px;
                                    font-weight: 600;
                                ">–î–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏</h2>
                            </div>
                        </div>
                        <button class="modal-close" onclick="closeTaskDetailModal()" style="
                            background: rgba(255, 255, 255, 0.1);
                            border: none;
                            border-radius: 12px;
                            width: 40px;
                            height: 40px;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            cursor: pointer;
                            color: var(--text-secondary, #cccccc);
                            transition: all 0.3s ease;
                        " onmouseover="this.style.background='rgba(255, 255, 255, 0.2)'" onmouseout="this.style.background='rgba(255, 255, 255, 0.1)'">‚úï</button>
                    </div>

                    <div class="task-detail-content" style="padding: 24px;">
                        <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å -->
                        <div class="task-detail-header" style="margin-bottom: 24px;">
                            <h3 id="detailTaskTitle" class="task-title" style="
                                font-size: 20px;
                                font-weight: 600;
                                color: var(--text-primary, #ffffff);
                                margin-bottom: 12px;
                                line-height: 1.4;
                            "></h3>
                            <div class="task-badges" style="display: flex; gap: 12px; flex-wrap: wrap;">
                                <span id="detailTaskStatus" class="task-status"></span>
                                <span id="detailTaskPriority" class="task-priority"></span>
                            </div>
                        </div>

                        <!-- –û–ø–∏—Å–∞–Ω–∏–µ -->
                        <div class="task-detail-section" style="margin-bottom: 24px;">
                            <div class="section-label" style="
                                display: flex;
                                align-items: center;
                                gap: 8px;
                                margin-bottom: 12px;
                                color: var(--text-secondary, #cccccc);
                                font-size: 14px;
                                font-weight: 500;
                            ">
                                <span>üìÑ</span>
                                <span>–û–ø–∏—Å–∞–Ω–∏–µ</span>
                            </div>
                            <div id="detailTaskDescription" class="task-description" style="
                                background: rgba(255, 255, 255, 0.05);
                                padding: 16px;
                                border-radius: 12px;
                                color: var(--text-primary, #ffffff);
                                line-height: 1.6;
                                white-space: pre-wrap;
                                word-wrap: break-word;
                                min-height: 60px;
                            "></div>
                        </div>

                        <!-- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–¥–∞—á–µ -->
                        <div class="task-detail-grid" style="
                            display: grid;
                            grid-template-columns: repeat(2, 1fr);
                            gap: 20px;
                            margin-bottom: 24px;
                        ">
                            <div class="detail-item" style="
                                background: rgba(255, 255, 255, 0.05);
                                padding: 14px;
                                border-radius: 12px;
                            ">
                                <div class="detail-label" style="
                                    display: flex;
                                    align-items: center;
                                    gap: 6px;
                                    margin-bottom: 8px;
                                    color: var(--text-secondary, #cccccc);
                                    font-size: 12px;
                                    font-weight: 500;
                                    text-transform: uppercase;
                                ">
                                    <span>üë§</span>
                                    <span>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å</span>
                                </div>
                                <div id="detailTaskEmployee" class="detail-value" style="
                                    color: var(--text-primary, #ffffff);
                                    font-size: 15px;
                                    font-weight: 500;
                                "></div>
                            </div>

                            <div class="detail-item" style="
                                background: rgba(255, 255, 255, 0.05);
                                padding: 14px;
                                border-radius: 12px;
                            ">
                                <div class="detail-label" style="
                                    display: flex;
                                    align-items: center;
                                    gap: 6px;
                                    margin-bottom: 8px;
                                    color: var(--text-secondary, #cccccc);
                                    font-size: 12px;
                                    font-weight: 500;
                                    text-transform: uppercase;
                                ">
                                    <span>‚ûï</span>
                                    <span>–ü–æ—Å—Ç–∞–≤–∏–ª</span>
                                </div>
                                <div id="detailTaskCreator" class="detail-value" style="
                                    color: var(--text-primary, #ffffff);
                                    font-size: 15px;
                                    font-weight: 500;
                                "></div>
                            </div>

                            <div class="detail-item" style="
                                background: rgba(255, 255, 255, 0.05);
                                padding: 14px;
                                border-radius: 12px;
                            ">
                                <div class="detail-label" style="
                                    display: flex;
                                    align-items: center;
                                    gap: 6px;
                                    margin-bottom: 8px;
                                    color: var(--text-secondary, #cccccc);
                                    font-size: 12px;
                                    font-weight: 500;
                                    text-transform: uppercase;
                                ">
                                    <span>üìÖ</span>
                                    <span>–î–µ–¥–ª–∞–π–Ω</span>
                                </div>
                                <div id="detailTaskDeadline" class="detail-value" style="
                                    color: var(--text-primary, #ffffff);
                                    font-size: 15px;
                                    font-weight: 500;
                                "></div>
                            </div>

                            <div class="detail-item" style="
                                background: rgba(255, 255, 255, 0.05);
                                padding: 14px;
                                border-radius: 12px;
                            ">
                                <div class="detail-label" style="
                                    display: flex;
                                    align-items: center;
                                    gap: 6px;
                                    margin-bottom: 8px;
                                    color: var(--text-secondary, #cccccc);
                                    font-size: 12px;
                                    font-weight: 500;
                                    text-transform: uppercase;
                                ">
                                    <span>‚è∞</span>
                                    <span>–°–æ–∑–¥–∞–Ω–∞</span>
                                </div>
                                <div id="detailTaskCreatedAt" class="detail-value" style="
                                    color: var(--text-primary, #ffffff);
                                    font-size: 15px;
                                    font-weight: 500;
                                "></div>
                            </div>
                        </div>

                        <!-- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π -->
                        <div class="task-detail-actions" style="
                            display: flex;
                            flex-wrap: wrap;
                            gap: 12px;
                            padding-top: 20px;
                            border-top: 1px solid rgba(255, 255, 255, 0.1);
                        ">
                            <button id="btnStartTask" class="action-btn btn-primary" onclick="startTask()" style="
                                flex: 1;
                                min-width: 150px;
                                padding: 12px 20px;
                                border: none;
                                border-radius: 12px;
                                font-size: 14px;
                                font-weight: 500;
                                cursor: pointer;
                                transition: all 0.3s ease;
                                display: none;
                                align-items: center;
                                justify-content: center;
                                gap: 8px;
                                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                                color: white;
                            ">
                                <span>‚ñ∂Ô∏è</span>
                                <span>–ù–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ</span>
                            </button>

                            <button id="btnCompleteTask" class="action-btn btn-success" onclick="completeTask()" style="
                                flex: 1;
                                min-width: 150px;
                                padding: 12px 20px;
                                border: none;
                                border-radius: 12px;
                                font-size: 14px;
                                font-weight: 500;
                                cursor: pointer;
                                transition: all 0.3s ease;
                                display: none;
                                align-items: center;
                                justify-content: center;
                                gap: 8px;
                                background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
                                color: white;
                            ">
                                <span>‚úÖ</span>
                                <span>–ó–∞–≤–µ—Ä—à–∏—Ç—å</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤ DOM
        document.body.insertAdjacentHTML('beforeend', modalHTML);

        taskDetailModalCache = document.getElementById('taskDetailModal');

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Ñ–æ–Ω—É
        taskDetailModalCache.addEventListener('click', function(e) {
            if (e.target === taskDetailModalCache) {
                closeTaskDetailModal();
            }
        });

        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ');
        return taskDetailModalCache;
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    function closeTaskDetailModal() {
        const modal = document.getElementById('taskDetailModal');
        if (!modal) return;

        modal.style.display = 'none';
        modal.classList.add('hidden');
        currentTaskDetails = null;
        console.log('üö™ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
    }

    // –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏
    function showTaskDetails(taskId) {
        console.log('üîç showTaskDetails –≤—ã–∑–≤–∞–Ω–∞ —Å taskId:', taskId);

        // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        let modal = document.getElementById('taskDetailModal');
        if (!modal) {
            createTaskDetailModal();
            modal = document.getElementById('taskDetailModal');
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        modal.style.display = 'flex';
        modal.classList.remove('hidden');

        // –ò—â–µ–º –∑–∞–¥–∞—á—É –≤ –∫–µ—à–µ
        let task = null;
        if (window.currentTasks && Array.isArray(window.currentTasks)) {
            task = window.currentTasks.find(t => String(t.id) === String(taskId));
            console.log('üîç –ü–æ–∏—Å–∫ –≤ currentTasks:', task ? '–Ω–∞–π–¥–µ–Ω–∞' : '–Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }

        if (task) {
            displayTaskDetails(task);
        } else {
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–µ—à–µ, –∑–∞–≥—Ä—É–∂–∞–µ–º —Å —Å–µ—Ä–≤–µ—Ä–∞
            fetchTaskFromServer(taskId);
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞—á–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
    function fetchTaskFromServer(taskId) {
        console.log('üåê –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞—á–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:', taskId);

        const modal = document.getElementById('taskDetailModal');
        const content = modal.querySelector('.task-detail-content');

        content.innerHTML = `
            <div style="text-align: center; padding: 40px; color: var(--text-secondary);">
                <div style="width: 40px; height: 40px; border: 3px solid rgba(255, 255, 255, 0.1); border-top-color: #667eea; border-radius: 50%; animation: spin 1s linear infinite; margin: 0 auto 16px;"></div>
                <h3>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞—á–∏...</h3>
            </div>
        `;

        // –≠–º—É–ª—è—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ (–∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API –≤—ã–∑–æ–≤)
        setTimeout(() => {
            content.innerHTML = `
                <div style="text-align: center; padding: 40px; color: red;">
                    <h3>–ó–∞–¥–∞—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h3>
                    <p>ID: ${taskId}</p>
                </div>
            `;
        }, 1000);
    }

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏
    function displayTaskDetails(task) {
        console.log('üìÑ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏:', task);
        currentTaskDetails = task;

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        const setElementText = (id, text) => {
            const element = document.getElementById(id);
            if (element) element.textContent = text || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        };

        setElementText('detailTaskTitle', task.title);
        setElementText('detailTaskDescription', task.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        setElementText('detailTaskEmployee', task.employeeName || task.employee || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω');
        setElementText('detailTaskCreator', task.creatorName || task.creator || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ');
        setElementText('detailTaskDeadline', formatTaskDate(task.deadline));
        setElementText('detailTaskCreatedAt', formatTaskDate(task.createdAt || task.created_at));

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        const statusElement = document.getElementById('detailTaskStatus');
        if (statusElement) {
            statusElement.textContent = getStatusText(task.status);
            statusElement.style.cssText = getStatusStyles(task.status);
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        const priorityElement = document.getElementById('detailTaskPriority');
        if (priorityElement) {
            priorityElement.textContent = getPriorityText(task.priority);
            priorityElement.style.cssText = getPriorityStyles(task.priority);
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        updateActionButtons(task);
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
    function updateActionButtons(task) {
        const btnStart = document.getElementById('btnStartTask');
        const btnComplete = document.getElementById('btnCompleteTask');

        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        if (btnStart) btnStart.style.display = 'none';
        if (btnComplete) btnComplete.style.display = 'none';

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        if (task.status === '–ù–æ–≤–∞—è' || task.status === 'new') {
            if (btnStart) btnStart.style.display = 'flex';
        } else if (task.status === '–í —Ä–∞–±–æ—Ç–µ' || task.status === 'in-progress') {
            if (btnComplete) btnComplete.style.display = 'flex';
        }
    }

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
    function formatTaskDate(dateString) {
        if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        try {
            const date = new Date(dateString);
            return date.toLocaleDateString('ru-RU', {
                day: 'numeric',
                month: 'long',
                year: 'numeric'
            });
        } catch (e) {
            return '–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞';
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞
    function getStatusText(status) {
        const statuses = {
            'new': 'üîµ –ù–æ–≤–∞—è',
            'in-progress': 'üü° –í —Ä–∞–±–æ—Ç–µ',
            'completed': 'üü¢ –í—ã–ø–æ–ª–Ω–µ–Ω–∞',
            '–ù–æ–≤–∞—è': 'üîµ –ù–æ–≤–∞—è',
            '–í —Ä–∞–±–æ—Ç–µ': 'üü° –í —Ä–∞–±–æ—Ç–µ',
            '–í—ã–ø–æ–ª–Ω–µ–Ω–∞': 'üü¢ –í—ã–ø–æ–ª–Ω–µ–Ω–∞'
        };
        return statuses[status] || 'üîµ –ù–æ–≤–∞—è';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π —Å—Ç–∞—Ç—É—Å–∞
    function getStatusStyles(status) {
        const styles = {
            'new': 'background: rgba(59, 130, 246, 0.2); color: #60a5fa; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            'in-progress': 'background: rgba(251, 191, 36, 0.2); color: #fbbf24; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            'completed': 'background: rgba(34, 197, 94, 0.2); color: #4ade80; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            '–ù–æ–≤–∞—è': 'background: rgba(59, 130, 246, 0.2); color: #60a5fa; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            '–í —Ä–∞–±–æ—Ç–µ': 'background: rgba(251, 191, 36, 0.2); color: #fbbf24; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            '–í—ã–ø–æ–ª–Ω–µ–Ω–∞': 'background: rgba(34, 197, 94, 0.2); color: #4ade80; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;'
        };
        return styles[status] || styles['new'];
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    function getPriorityText(priority) {
        const priorities = {
            'high': 'üî¥ –í—ã—Å–æ–∫–∏–π',
            'medium': 'üü° –°—Ä–µ–¥–Ω–∏–π',
            'low': 'üü¢ –ù–∏–∑–∫–∏–π',
            '–í—ã—Å–æ–∫–∏–π': 'üî¥ –í—ã—Å–æ–∫–∏–π',
            '–°—Ä–µ–¥–Ω–∏–π': 'üü° –°—Ä–µ–¥–Ω–∏–π',
            '–ù–∏–∑–∫–∏–π': 'üü¢ –ù–∏–∑–∫–∏–π'
        };
        return priorities[priority] || 'üü° –°—Ä–µ–¥–Ω–∏–π';
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
    function getPriorityStyles(priority) {
        const styles = {
            'high': 'background: rgba(239, 68, 68, 0.2); color: #f87171; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            'medium': 'background: rgba(251, 191, 36, 0.2); color: #fbbf24; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            'low': 'background: rgba(34, 197, 94, 0.2); color: #4ade80; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            '–í—ã—Å–æ–∫–∏–π': 'background: rgba(239, 68, 68, 0.2); color: #f87171; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            '–°—Ä–µ–¥–Ω–∏–π': 'background: rgba(251, 191, 36, 0.2); color: #fbbf24; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;',
            '–ù–∏–∑–∫–∏–π': 'background: rgba(34, 197, 94, 0.2); color: #4ade80; padding: 6px 12px; border-radius: 20px; font-size: 13px; font-weight: 500;'
        };
        return styles[priority] || styles['medium'];
    }

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
    function forceRegisterFunctions() {
        if (!window._taskModalFunctionsRegistered) {
            window.showTaskDetails = showTaskDetails;
            window.closeTaskDetailModal = closeTaskDetailModal;
            window.createTaskDetailModal = createTaskDetailModal;
            window._taskModalFunctionsRegistered = true;

            console.log('üîß –§—É–Ω–∫—Ü–∏–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã:', {
                showTaskDetails: typeof window.showTaskDetails,
                closeTaskDetailModal: typeof window.closeTaskDetailModal
            });
        }
    }

    // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
    forceRegisterFunctions();

    // –£–±–∏—Ä–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø–µ—Ä–µ—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é - –æ–Ω–∞ –Ω–µ –Ω—É–∂–Ω–∞

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', forceRegisterFunctions);
    } else {
        setTimeout(forceRegisterFunctions, 100);
    }

    console.log('‚úÖ task-modal-final.js –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');

})();