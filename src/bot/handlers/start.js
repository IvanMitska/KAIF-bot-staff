const userService = require('../../services/userService');
const keyboards = require('../keyboards/inline');
const replyKeyboards = require('../keyboards/reply');
const security = require('../../utils/security');

// –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
const registrationStates = new Map();

module.exports = (bot) => {
  console.log('Registering /start handler');
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
  bot.onText(/\/start/, async (msg) => {
    security.secureLog('Start command received', { 
      userId: msg.from.id,
      username: msg.from.username 
    });
    
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const username = msg.from.username || '';
    
    // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ - –±–æ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤—Å–µ–º
    
    try {
      console.log('Checking for existing user with ID:', userId);
      const existingUser = await userService.getUserByTelegramId(userId);
      console.log('Existing user:', existingUser);
      
      // –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å WebApp, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–ª–∏ –Ω–µ—Ç
      console.log('Sending welcome message');
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π Web App
      let webAppUrl = process.env.WEBAPP_URL;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ WEBAPP_URL
      if (!webAppUrl) {
        console.warn('‚ö†Ô∏è WEBAPP_URL not set in environment!');
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ URL –¥–ª—è Railway
        if (process.env.RAILWAY_STATIC_URL) {
          webAppUrl = `https://${process.env.RAILWAY_STATIC_URL}/webapp/public`;
          console.log('Using RAILWAY_STATIC_URL:', webAppUrl);
        } else if (process.env.RAILWAY_PUBLIC_DOMAIN) {
          webAppUrl = `https://${process.env.RAILWAY_PUBLIC_DOMAIN}/webapp/public`;
          console.log('Using RAILWAY_PUBLIC_DOMAIN:', webAppUrl);
        } else if (process.env.RAILWAY_DEPLOYMENT_NAME) {
          // Railway v2
          webAppUrl = `https://${process.env.RAILWAY_DEPLOYMENT_NAME}.up.railway.app/webapp/public`;
          console.log('Using RAILWAY_DEPLOYMENT_NAME:', webAppUrl);
        } else {
          // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º ngrok –∏–ª–∏ –¥—Ä—É–≥–æ–π HTTPS —Ç—É–Ω–Ω–µ–ª—å
          webAppUrl = 'https://tgbotkaifstaff-production.up.railway.app/webapp/public';
          console.log('Using production URL fallback:', webAppUrl);
        }
      }
      
      // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ URL –∏—Å–ø–æ–ª—å–∑—É–µ—Ç HTTPS
      if (webAppUrl.startsWith('http://') && !webAppUrl.includes('localhost')) {
        webAppUrl = webAppUrl.replace('http://', 'https://');
        console.log('Converted to HTTPS:', webAppUrl);
      }
      
      console.log('‚úÖ Final WebApp URL:', webAppUrl);
      
      const userName = existingUser ? existingUser.name : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
      
      await bot.sendMessage(chatId, 
        `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ KAIF Staff! üëã\n\n` +
        `–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Web App –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π.`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: 'üöÄ –û—Ç–∫—Ä—ã—Ç—å KAIF App',
                  web_app: { url: webAppUrl }
                }
              ]
            ]
          }
        }
      );
      
      // –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
      registrationStates.delete(userId);
    } catch (error) {
      console.error('Start command error:', error);
      console.error('Error details:', error.message);
      console.error('Stack trace:', error.stack);
      bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
  });

  // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ - —Ç–µ–ø–µ—Ä—å –≤—Å–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ WebApp
};