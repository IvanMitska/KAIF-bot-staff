#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∞—Ç (2026 –≥–æ–¥) –≤ –∑–∞–¥–∞—á–∞—Ö
 */

require('dotenv').config();
const { Client } = require('@notionhq/client');

const notion = new Client({
  auth: process.env.NOTION_API_KEY
});

const TASKS_DB_ID = '24429e84-656d-8145-b032-dad938461018';

// –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Å—Ä–æ–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á (–∏–∑ —Ç–∞–±–ª–∏—Ü—ã)
const CORRECT_DEADLINES = {
  // –ë–æ—Ä–∏—Å
  "–ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–µ –æ—Ñ—Ñ–µ—Ä—ã": "2025-09-09",
  "—Ü–≤–µ—Ç—ã –≤ –∫–æ–º–ø–ª–µ–∫—Å": "2025-09-02",
  "–≤—ã–≤–µ—Å–∫–∞ –Ω–∞ –≤—ä–µ–∑–¥–µ": "2025-09-09",
  "–∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏": "2025-09-02",
  "—Ç–µ—Å—Ç –Ω–∞ –Ω–∞—Ä–∫–æ—Ç–∏–∫–∏": "2025-09-02",
  "—Å–º–µ—Ç–∞ –Ω–∞ —Ä–µ–º–æ–Ω—Ç": "2025-08-26",
  "—Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–π": "2025-09-16",
  "—ç–∫–≤–∞–π—Ä–∏–Ω–≥ –º–∞—à–∏–Ω–∫–∏": "2025-09-02",
  "—Ü–µ–Ω—ã –∞—Ä–µ–Ω–¥—ã": "2025-09-02",
  "qr –Ω–∞ —á–∞–µ–≤—ã–µ": "2025-08-26",
  "—Ç–∞–±–ª–∏—á–∫–∞": "2025-08-26",
  "—Å—Ç–µ–Ω–¥": "2025-08-26",
  "—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∞": "2025-09-02",
  "—á–∞–π–Ω—ã–µ —Ü–µ—Ä–µ–º–æ–Ω–∏–∏": "2025-09-02",
  "–∫–æ–Ω—Ç—Ä–∞–∫—Ç –±–µ–∑ work permit": "2025-09-02",
  "–≤–Ω–µ–¥—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –æ—Ç—á–µ—Ç–æ–≤": "2025-08-26",
  "–ø–µ—Å—Ç –∫–æ–Ω—Ç—Ä–æ–ª—å": "2025-08-26",
  "—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫": "2025-08-26",
  "–±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω—ã–µ –ø—Ä–∏–Ω—Ç–µ—Ä—ã": "2025-08-26",
  
  // –ö—Å–µ–Ω–∏—è
  "—Ä–∞—Å–ø–µ—á–∞—Ç–∫–∏ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞–º": "2025-08-26",
  "–ª–µ–¥ –≤ –∫—É–ø–µ–ª—å": "2025-08-22",
  "–º—è—Ç–Ω—ã–π –ø–∞—Ä": "2025-08-26",
  "–∞—Ä–æ–º–∞ –º–∞—Å–ª–∞": "2025-08-22",
  "–º–∞—Å—Å–∞–∂ –≥–æ–ª–æ–≤—ã": "2025-08-22",
  "–∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ –≥—Ä—É–ø–ø–æ–≤—ã–µ": "2025-08-22",
  "–∏–Ω—Å—Ç–∞ —Ñ–æ—Ç–æ–∑–æ–Ω–∞": "2025-09-02",
  "—Ñ–æ—Ç–æ —Ç–µ—Ä—Ä–∞—Å—ã": "2025-08-26",
  
  // –ò–≤–∞–Ω
  "—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –±–æ—Ç": "2025-08-26",
  "–æ—Ü–∏—Ñ—Ä–æ–≤–∫–∞ —Ç—Ä–∞—Ñ–∏–∫–∞": "2025-09-02",
  "–Ω–æ–≤–∞—è —Å—Ä–º": "2025-09-02",
  
  // –ú–∞–∫—Å–∏–º
  "–ø–æ—Ç–æ–ª–æ–∫": "2025-08-22",
  
  // –î–º–∏—Ç—Ä–∏–π
  "–º–∞–Ω–≥–∞–ª –Ω–∞ –≤—Ç–æ—Ä–æ–º": "2025-09-02",
  "–±—Ä–µ–Ω–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–µ—Ä–≥–∞–º–µ–Ω—Ç": "2025-08-26",
  
  // –ê–ª—è
  "–∂–∏–º + –∫–∞—Ä–¥–∏–æ": "2025-09-02",
  "–º–∞—Å—Å–∞–∂": "2025-08-22",
  
  // –ò–≥–æ—Ä—å
  "–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ wifi": "2025-08-26"
};

async function fixWrongDates() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –¥–∞—Ç –≤ –∑–∞–¥–∞—á–∞—Ö...\n');
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ —Å –¥–∞—Ç–æ–π 2026-08-17
    const response = await notion.databases.query({
      database_id: TASKS_DB_ID,
      filter: {
        property: '–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
        date: {
          equals: '2026-08-17'
        }
      },
      page_size: 100
    });
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á —Å –¥–∞—Ç–æ–π 2026-08-17: ${response.results.length}\n`);
    
    if (response.results.length === 0) {
      console.log('‚úÖ –ó–∞–¥–∞—á —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∞—Ç–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
      return;
    }
    
    let fixed = 0;
    let failed = 0;
    
    for (const task of response.results) {
      const title = task.properties['–ù–∞–∑–≤–∞–Ω–∏–µ']?.rich_text?.[0]?.text?.content || '';
      const assignee = task.properties['–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å']?.rich_text?.[0]?.text?.content || '';
      
      // –ò—â–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏
      let correctDate = null;
      const titleLower = title.toLowerCase();
      
      for (const [key, date] of Object.entries(CORRECT_DEADLINES)) {
        if (titleLower.includes(key)) {
          correctDate = date;
          break;
        }
      }
      
      if (!correctDate) {
        console.log(`‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–∞—Ç–∞ –¥–ª—è: "${title}"`);
        console.log(`   –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å –∏–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç...`);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é –¥–∞—Ç—É —á–µ—Ä–µ–∑ 2 –Ω–µ–¥–µ–ª–∏
        const defaultDate = new Date();
        defaultDate.setDate(defaultDate.getDate() + 14);
        correctDate = defaultDate.toISOString().split('T')[0];
      }
      
      try {
        await notion.pages.update({
          page_id: task.id,
          properties: {
            '–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è': {
              date: {
                start: correctDate
              }
            }
          }
        });
        
        fixed++;
        console.log(`‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: "${title}" -> ${correctDate}`);
      } catch (error) {
        failed++;
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ "${title}": ${error.message}`);
      }
    }
    
    console.log(`\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:`);
    console.log(`   –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: ${fixed} –∑–∞–¥–∞—á`);
    if (failed > 0) {
      console.log(`   –û—à–∏–±–æ–∫: ${failed}`);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ —Å –¥–∞—Ç–∞–º–∏ –≤ –¥–∞–ª–µ–∫–æ–º –±—É–¥—É—â–µ–º
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏ —Å –¥–∞—Ç–∞–º–∏ –ø–æ—Å–ª–µ 2025-12-31...');
    
    const futureTasksResponse = await notion.databases.query({
      database_id: TASKS_DB_ID,
      filter: {
        property: '–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è',
        date: {
          after: '2025-12-31'
        }
      },
      page_size: 100
    });
    
    if (futureTasksResponse.results.length > 0) {
      console.log(`\n‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ –µ—â–µ ${futureTasksResponse.results.length} –∑–∞–¥–∞—á —Å –¥–∞—Ç–∞–º–∏ –≤ –¥–∞–ª–µ–∫–æ–º –±—É–¥—É—â–µ–º`);
      
      for (const task of futureTasksResponse.results) {
        const title = task.properties['–ù–∞–∑–≤–∞–Ω–∏–µ']?.rich_text?.[0]?.text?.content || '';
        const deadline = task.properties['–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è']?.date?.start;
        console.log(`   - "${title}" -> ${deadline}`);
      }
      
      console.log('\n–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –µ—â–µ —Ä–∞–∑ –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–∏—Ö –∑–∞–¥–∞—á');
    } else {
      console.log('‚úÖ –î—Ä—É–≥–∏—Ö –∑–∞–¥–∞—á —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
fixWrongDates();