const xlsx = require('xlsx');
const path = require('path');
require('dotenv').config();

// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
const railwayService = require('./src/services/railwayOptimizedService');
const userService = require('./src/services/userService');

// –ú–∞–ø–ø–∏–Ω–≥ –∏–º–µ–Ω —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω–∞ –∏—Ö Telegram ID
const userMapping = {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ –±–∞–∑—ã
  '–ò–≤–∞–Ω': '1734337242',
  'Ivan': '1734337242',
  '–ë–æ—Ä–∏—Å': '385436658',
  'Boris': '385436658',
  '–ö—Å–µ–Ω–∏—è': '1151085087',
  '–ï–≥–æ—Ä': '1151085087',  // –ö—Å–µ–Ω–∏—è –≤ –±–∞–∑–µ, –Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ —ç—Ç–æ –ï–≥–æ—Ä
  'Egor': '1151085087',
  '–ï–ª–µ–Ω–∞': '726915228',  // –í –±–∞–∑–µ –∫–∞–∫ –ï–ª–µ–Ω–∞, –≤–æ–∑–º–æ–∂–Ω–æ –ú–∏—Ö–∞–∏–ª
  '–ú–∏—Ö–∞–∏–ª': '726915228',
  'Mikhail': '726915228',
  'Mihail': '726915228',
  '–ê–ª—è': '642664990',
  '–ê–ª–µ–∫—Å–µ–π': '642664990',  // –ê–ª—è –≤ –±–∞–∑–µ, –≤–æ–∑–º–æ–∂–Ω–æ –ê–ª–µ–∫—Å–µ–π
  'Alexey': '642664990',
  'Alexei': '642664990',
  '–î–º–∏—Ç—Ä–∏–π': '5937587032',
  'Dmitry': '5937587032',
  '–ú–∞–∫—Å–∏–º': '303267717',
  'Maxim': '303267717',
  '–Ø–∫–æ–≤': '893020643',
  'Yakov': '893020643',
  
  // –°–æ—Å—Ç–∞–≤–Ω—ã–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ø–µ—Ä–≤–æ–≥–æ –∏–ª–∏ –±–æ–ª–µ–µ –æ–ø—ã—Ç–Ω–æ–≥–æ)
  '–ú–∏—Ö–∞–∏–ª + –í—Å–µ–≤–æ–ª–æ–¥': '726915228', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ï–ª–µ–Ω—É/–ú–∏—Ö–∞–∏–ª–∞
  '–ú–∞–∫—Å–∏–º + –î–º–∏—Ç—Ä–∏–π': '303267717', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ú–∞–∫—Å–∏–º–∞
  '–ï–≥–æ—Ä + –ù–æ–≤—ã–π –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥': '1151085087', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ö—Å–µ–Ω–∏—é/–ï–≥–æ—Ä–∞
  '–ï–≥–æ—Ä + –§–µ–¥–æ—Ä': '1151085087', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ö—Å–µ–Ω–∏—é/–ï–≥–æ—Ä–∞
  '–§–µ–¥–æ—Ä + –ú–∏—Ö–∞–∏–ª': '726915228', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ï–ª–µ–Ω—É/–ú–∏—Ö–∞–∏–ª–∞
  '–Æ—Ä–∏—Å—Ç': '385436658', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ë–æ—Ä–∏—Å–∞ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  
  // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ - –Ω–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ë–æ—Ä–∏—Å–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
  '–ê–Ω–¥—Ä–µ–π': '385436658',  // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ë–æ—Ä–∏—Å–∞
  '–ù–∏–∫–æ–ª–∞–π': '385436658', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ë–æ—Ä–∏—Å–∞
  '–í—Å–µ–≤–æ–ª–æ–¥': '385436658', // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ë–æ—Ä–∏—Å–∞
  '–§–µ–¥–æ—Ä': '385436658' // –ù–∞–∑–Ω–∞—á–∞–µ–º –Ω–∞ –ë–æ—Ä–∏—Å–∞
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ Telegram ID –ø–æ –∏–º–µ–Ω–∏
function findTelegramId(name) {
  if (!name) return null;
  
  const normalizedName = name.trim();
  
  // –ü—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
  if (userMapping[normalizedName]) {
    return userMapping[normalizedName];
  }
  
  // –ü–æ–∏—Å–∫ –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
  for (const [key, value] of Object.entries(userMapping)) {
    if (normalizedName.toLowerCase().includes(key.toLowerCase()) || 
        key.toLowerCase().includes(normalizedName.toLowerCase())) {
      return value;
    }
  }
  
  console.log(`‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω Telegram ID –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: ${name}`);
  return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞—Ç—ã –∏–∑ Excel
function parseExcelDate(excelDate) {
  if (!excelDate) return null;
  
  // –ï—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ (Excel serial date)
  if (typeof excelDate === 'number') {
    // Excel —Å—á–∏—Ç–∞–µ—Ç –¥–Ω–∏ —Å 1 —è–Ω–≤–∞—Ä—è 1900
    const excelEpoch = new Date(1900, 0, 1);
    const days = excelDate - 2; // Excel —Å—á–∏—Ç–∞–µ—Ç 1900 –≥–æ–¥ –≤–∏—Å–æ–∫–æ—Å–Ω—ã–º (–æ—à–∏–±–∫–∞)
    const date = new Date(excelEpoch.getTime() + days * 24 * 60 * 60 * 1000);
    return date.toISOString().split('T')[0];
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞
  if (typeof excelDate === 'string') {
    // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã
    const formats = [
      /(\d{2})\.(\d{2})\.(\d{4})/, // DD.MM.YYYY
      /(\d{2})\/(\d{2})\/(\d{4})/, // DD/MM/YYYY
      /(\d{4})-(\d{2})-(\d{2})/,   // YYYY-MM-DD
    ];
    
    for (const format of formats) {
      const match = excelDate.match(format);
      if (match) {
        if (format === formats[0] || format === formats[1]) {
          // DD.MM.YYYY –∏–ª–∏ DD/MM/YYYY
          return `${match[3]}-${match[2].padStart(2, '0')}-${match[1].padStart(2, '0')}`;
        } else {
          // YYYY-MM-DD
          return `${match[1]}-${match[2].padStart(2, '0')}-${match[3].padStart(2, '0')}`;
        }
      }
    }
  }
  
  // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ Date –æ–±—ä–µ–∫—Ç
  if (excelDate instanceof Date) {
    return excelDate.toISOString().split('T')[0];
  }
  
  console.log(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –¥–∞—Ç—É: ${excelDate}`);
  return new Date().toISOString().split('T')[0]; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–µ–≥–æ–¥–Ω—è—à–Ω—é—é –¥–∞—Ç—É –∫–∞–∫ fallback
}

async function importTasks() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–º–ø–æ—Ä—Ç –∑–∞–¥–∞—á –∏–∑ Excel...\n');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
    await railwayService.initialize();
    console.log('‚úÖ –°–µ—Ä–≤–∏—Å—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã\n');
    
    // –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
    const filePath = '/Users/ivan/Downloads/–ó–∞–¥–∞—á–∏_KAIF.xlsx';
    const workbook = xlsx.readFile(filePath);
    
    // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –ª–∏—Å—Ç
    const sheetName = workbook.SheetNames[0];
    const worksheet = workbook.Sheets[sheetName];
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
    const tasks = xlsx.utils.sheet_to_json(worksheet);
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${tasks.length} –∑–∞–¥–∞—á –≤ —Ñ–∞–π–ª–µ\n`);
    
    // –°—á–µ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    let imported = 0;
    let skipped = 0;
    let errors = 0;
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–¥–∞—á–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    const existingTasks = await railwayService.getAllTasks();
    console.log(`üìã –í –±–∞–∑–µ —É–∂–µ –µ—Å—Ç—å ${existingTasks.length} –∑–∞–¥–∞—á\n`);
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∑–∞–¥–∞—á—É
    for (const task of tasks) {
      try {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç—Ä–æ–∫–∏ Excel (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫)
        const title = task['–ó–∞–¥–∞—á–∞'];
        const assigneeName = task['–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π'];
        const deadline = task['—Å—Ä–æ–∫–∏'];
        const description = task['–û–ø–∏—Å–∞–Ω–∏–µ'] || '';
        const department = task['–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ'] || '';
        const priority = task['–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç'] || '–°—Ä–µ–¥–Ω–∏–π';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ –∫ –æ–ø–∏—Å–∞–Ω–∏—é –µ—Å–ª–∏ –µ—Å—Ç—å
        const fullDescription = department ? `${description}\n\n–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: ${department}` : description;
        
        if (!title || !assigneeName) {
          console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É - –Ω–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è`);
          skipped++;
          continue;
        }
        
        // –ù–∞—Ö–æ–¥–∏–º Telegram ID —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
        const telegramId = findTelegramId(assigneeName);
        
        if (!telegramId) {
          console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É "${title}" - –Ω–µ –Ω–∞–π–¥–µ–Ω Telegram ID –¥–ª—è ${assigneeName}`);
          skipped++;
          continue;
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const user = await userService.getUserByTelegramId(telegramId);
        
        if (!user) {
          console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É "${title}" - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${assigneeName} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ`);
          skipped++;
          continue;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç
        const duplicate = existingTasks.find(t => 
          t.title === title && 
          t.assigneeId === telegramId
        );
        
        if (duplicate) {
          console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç: "${title}" –¥–ª—è ${assigneeName}`);
          skipped++;
          continue;
        }
        
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
        const taskData = {
          title: title,
          description: fullDescription || '',
          assigneeId: telegramId,
          assigneeName: user.name,
          creatorId: '385436658', // Boris –∫–∞–∫ —Å–æ–∑–¥–∞—Ç–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
          creatorName: '–ë–æ—Ä–∏—Å',
          priority: priority,
          deadline: parseExcelDate(deadline),
          status: '–ù–æ–≤–∞—è'
        };
        
        // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É
        console.log(`üìù –°–æ–∑–¥–∞—é –∑–∞–¥–∞—á—É: "${title}" –¥–ª—è ${user.name} (—Å—Ä–æ–∫: ${taskData.deadline})`);
        await railwayService.createTask(taskData);
        
        imported++;
        console.log(`‚úÖ –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ\n`);
        
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å API
        await new Promise(resolve => setTimeout(resolve, 500));
        
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–¥–∞—á–∏:`, error.message);
        errors++;
      }
    }
    
    // –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\n' + '='.repeat(50));
    console.log('üìä –ò–¢–û–ì–ò –ò–ú–ü–û–†–¢–ê:');
    console.log('='.repeat(50));
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: ${imported} –∑–∞–¥–∞—á`);
    console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skipped} –∑–∞–¥–∞—á`);
    console.log(`‚ùå –û—à–∏–±–æ–∫: ${errors}`);
    console.log(`üìã –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${tasks.length} —Å—Ç—Ä–æ–∫`);
    console.log('='.repeat(50));
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ:', error);
    console.error(error.stack);
  } finally {
    process.exit(0);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç
importTasks();