// –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞—á
console.log('üîß task-click-fix.js –∑–∞–≥—Ä—É–∂–µ–Ω');

(function() {
    'use strict';

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ñ–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    let isInitialized = false;
    let initAttempts = 0;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–ª–∏–∫–∞ –Ω–∞ –≤—Å–µ –∑–∞–¥–∞—á–∏
    function attachTaskClickHandlers() {
        const taskItems = document.querySelectorAll('.task-item-modern[data-task-id]');

        if (taskItems.length === 0) {
            console.log('‚ö†Ô∏è –ó–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
            return false;
        }

        console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ –∑–∞–¥–∞—á –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${taskItems.length}`);
        let handlersAdded = 0;

        taskItems.forEach((item, index) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            if (item.hasAttribute('data-click-handler-added')) {
                return;
            }

            const taskId = item.getAttribute('data-task-id');
            if (!taskId) {
                console.warn(`‚ö†Ô∏è –ó–∞–¥–∞—á–∞ ${index} –Ω–µ –∏–º–µ–µ—Ç data-task-id`);
                return;
            }

            // –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
            const clickHandler = function(e) {
                e.preventDefault();
                e.stopPropagation();

                console.log(`üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∑–∞–¥–∞—á–µ: ${taskId}`);

                // –ü—Ä–æ–±—É–µ–º –≤—ã–∑–≤–∞—Ç—å showTaskDetails
                if (typeof window.showTaskDetails === 'function') {
                    try {
                        window.showTaskDetails(taskId);
                        console.log('‚úÖ showTaskDetails –≤—ã–∑–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
                    } catch (error) {
                        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ showTaskDetails:', error);
                    }
                } else {
                    console.error('‚ùå showTaskDetails –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
                    // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–æ–∂–¥–∞—Ç—å –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å
                    setTimeout(() => {
                        if (typeof window.showTaskDetails === 'function') {
                            window.showTaskDetails(taskId);
                        }
                    }, 500);
                }
            };

            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –∞—Ç—Ä–∏–±—É—Ç—ã
            item.removeAttribute('onclick');
            item.onclick = null;

            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            item.addEventListener('click', clickHandler);
            item.style.cursor = 'pointer';
            item.style.userSelect = 'none';

            // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
            item.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-2px)';
                this.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.15)';
            });

            item.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0)';
                this.style.boxShadow = '0 2px 8px rgba(0, 0, 0, 0.1)';
            });

            // –ü–æ–º–µ—á–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω
            item.setAttribute('data-click-handler-added', 'true');
            handlersAdded++;

            console.log(`‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –∑–∞–¥–∞—á–∏ ${taskId}`);
        });

        console.log(`üìä –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã: ${handlersAdded}/${taskItems.length}`);
        return handlersAdded > 0;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
    function observeTasksContainer() {
        const tasksContainer = document.getElementById('tasksList');

        if (!tasksContainer) {
            console.log('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä tasksList –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        console.log('üëÅÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ tasksList');

        // –°–æ–∑–¥–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å
        const observer = new MutationObserver((mutations) => {
            let tasksAdded = false;

            mutations.forEach((mutation) => {
                if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
                    mutation.addedNodes.forEach((node) => {
                        if (node.nodeType === 1 && (
                            node.classList?.contains('task-item-modern') ||
                            node.querySelector?.('.task-item-modern')
                        )) {
                            tasksAdded = true;
                        }
                    });
                }
            });

            if (tasksAdded) {
                console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏, –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏...');
                setTimeout(() => {
                    attachTaskClickHandlers();
                }, 100);
            }
        });

        // –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ
        observer.observe(tasksContainer, {
            childList: true,
            subtree: true
        });

        console.log('‚úÖ –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    // –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    function initialize() {
        initAttempts++;
        console.log(`üöÄ –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ #${initAttempts}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∑–∞–¥–∞—á–∞–º–∏
        const tasksPage = document.getElementById('tasks');
        const isTasksPageVisible = tasksPage && !tasksPage.classList.contains('hidden') && tasksPage.style.display !== 'none';

        if (!isTasksPageVisible && initAttempts < 20) {
            console.log('‚è≥ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–¥–∞—á –µ—â–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –∂–¥–µ–º...');
            setTimeout(initialize, 500);
            return;
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –∑–∞–¥–∞—á–∞–º
        const success = attachTaskClickHandlers();

        if (success) {
            isInitialized = true;
            console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
        } else if (initAttempts < 20) {
            console.log('‚è≥ –ó–∞–¥–∞—á–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø–æ–≤—Ç–æ—Ä—è–µ–º...');
            setTimeout(initialize, 500);
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å
        observeTasksContainer();
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–¥–∞—á
    function reinitializeOnTasksPage() {
        // –°–ª—É—à–∞–µ–º –∫–ª–∏–∫–∏ –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.addEventListener('click', function(e) {
            const target = e.target;

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –∫–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∑–∞–¥–∞—á?
            if (target.closest('[onclick*="showPage(\'tasks\')"]') ||
                target.closest('[data-page="tasks"]') ||
                (target.textContent && target.textContent.includes('–ó–∞–¥–∞—á–∏'))) {

                console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–¥–∞—á, –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');

                // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
                setTimeout(() => {
                    attachTaskClickHandlers();
                    observeTasksContainer();
                }, 500);
            }
        });

        // –¢–∞–∫–∂–µ —Å–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const tasksPage = document.getElementById('tasks');
        if (tasksPage) {
            const visibilityObserver = new MutationObserver(() => {
                if (!tasksPage.classList.contains('hidden') && tasksPage.style.display !== 'none') {
                    console.log('üìã –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–¥–∞—á —Å—Ç–∞–ª–∞ –≤–∏–¥–∏–º–æ–π');
                    setTimeout(attachTaskClickHandlers, 100);
                }
            });

            visibilityObserver.observe(tasksPage, {
                attributes: true,
                attributeFilter: ['class', 'style']
            });
        }
    }

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    function periodicCheck() {
        setInterval(() => {
            const tasksPage = document.getElementById('tasks');
            const isVisible = tasksPage && !tasksPage.classList.contains('hidden') && tasksPage.style.display !== 'none';

            if (isVisible) {
                const taskItems = document.querySelectorAll('.task-item-modern[data-task-id]');
                const unhandledItems = document.querySelectorAll('.task-item-modern[data-task-id]:not([data-click-handler-added])');

                if (unhandledItems.length > 0) {
                    console.log(`üîß –ù–∞–π–¥–µ–Ω–æ ${unhandledItems.length} –∑–∞–¥–∞—á –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º...`);
                    attachTaskClickHandlers();
                }
            }
        }, 2000);
    }

    // –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
    function startTaskClickFix() {
        console.log('üèÅ –ó–∞–ø—É—Å–∫ task-click-fix');

        // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initialize);
        } else {
            setTimeout(initialize, 100);
        }

        // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã
        reinitializeOnTasksPage();
        periodicCheck();

        // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
        window.fixTaskClicks = function() {
            console.log('üîß –†—É—á–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–∫–æ–≤');
            attachTaskClickHandlers();
        };

        console.log('‚úÖ task-click-fix –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    startTaskClickFix();

})();

console.log('‚úÖ task-click-fix.js –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω');